<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>MixModes.Synergy.VisualFramework</name>
  </assembly>
  <members>
    <member name="N:MixModes.Synergy.VisualFramework.Views">
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Views.DialogWindow">
      <summary>
A class that encapsulates the functionality for a Dialog window. It derives from the base WPF window and customizes the appearance to look like a typical Windows dialog.</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Views.DialogWindow.#ctor">
      <summary>
Default constructor.</summary>
    </member>
    <member name="N:MixModes.Synergy.VisualFramework.Behaviors">
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Behaviors.DockPointBehavior">
      <summary>
Illustrates the docking behavior for DockPanels within WindowsManager</summary>
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Behaviors.LogicalParentBehavior`1">
      <summary>
Behavior that is attached to a logical parent of specified type that may or may not be immidiate parent of the behavior</summary>
      <remarks>
1. The first parent that matches the specified type is assumed to be the logical parent that behavior shall use 2. Do not use AssociatedObject but rather LogicalParent when using derived behaviors of this type</remarks>
    </member>
    <member name="N:MixModes.Synergy.VisualFramework.Windows">
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Windows.CustomWindow">
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.CustomWindow.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000011$SL$$LE$CustomWindow$EL$ class.</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.CustomWindow.OnApplyTemplate">
      <summary>
When overridden in a derived class, is invoked whenever application code or internal processes call $MSDNLS$M:System.Windows.FrameworkElement.ApplyTemplate$MSDNLE$ApplyTemplate$MSDNEL$.</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.CustomWindow.Maximized">
      <summary>
Gets or sets a value indicating whether this $LS$topic_0000000000000011$SL$$LE$CustomWindow$EL$ is maximized</summary>
    </member>
    <member name="N:MixModes.Synergy.VisualFramework.Framework">
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Framework.ObservableDependencyProperty">
      <summary>
Wrapper class that creates a wrapper for DependencyPropertyDescriptor</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Framework.ObservableDependencyProperty.#ctor(System.Type,System.Windows.DependencyProperty,System.Windows.DependencyPropertyChangedEventHandler)">
      <summary>
Initializes a new instance of the $LS$$SL$$LE$ObservableDependencyProperty$EL$ class.</summary>
      <param name="targetType">
Type of the target</param>
      <param name="dependencyProperty">
Dependency property.</param>
      <param name="OnDependencyPropertyChanged">
Dependency property changed callback</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Framework.ObservableDependencyProperty.AddValueChanged(System.Windows.DependencyObject)">
      <summary>
Enables property monitoring for a dependency object</summary>
      <param name="dependencyObject">
The dependency object</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Framework.ObservableDependencyProperty.RemoveValueChanged(System.Windows.DependencyObject)">
      <summary>
Disables property monitoring for a dependency object</summary>
      <param name="dependencyObject">
The dependency object.</param>
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Framework.ObservableDependencyPropertyCollection`1">
      <summary>
Observable dependency property collection</summary>
    </member>
    <member name="E:MixModes.Synergy.VisualFramework.Framework.ObservableDependencyPropertyCollection`1.DependencyPropertyChanged">
      <summary>
Occurs when dependency property has changed</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Framework.ObservableDependencyPropertyCollection`1.#ctor">
      <summary>
Initializes a new instance of the $LS$$SL$$LE$ObservableDependencyPropertyCollection<T>$EL$ class. All the dependency properties in the inheritance hierarchy is monitored for changes</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Framework.ObservableDependencyPropertyCollection`1.#ctor(System.Collections.Generic.List{`0})">
      <summary>
Initializes a new instance of the $LS$$SL$$LE$ObservableDependencyPropertyCollection<T>$EL$ class. All the dependency properties in the inheritance hierarchy is monitored for changes</summary>
      <param name="list">
Collection whose dependency properties are to be monitored</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Framework.ObservableDependencyPropertyCollection`1.#ctor(System.Windows.DependencyProperty[])">
      <summary>
Initializes a new instance of the $LS$$SL$$LE$ObservableDependencyPropertyCollection<T>$EL$ class. Only dependency properties specified in properties are monitored</summary>
      <param name="properties">
Dependency properties to monitor in collection</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Framework.ObservableDependencyPropertyCollection`1.#ctor(System.Collections.Generic.List{`0},System.Windows.DependencyProperty[])">
      <summary>
Initializes a new instance of the $LS$$SL$$LE$ObservableDependencyPropertyCollection<T>$EL$ class Only dependency properties specified in properties are monitored</summary>
      <param name="list">
Collection whose dependency properties are to be monitored</param>
      <param name="properties">
Dependency properties to monitor in collection</param>
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Windows.WindowsManager">
      <summary>
Interaction logic for WindowsManager.xaml</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000020$SL$$LE$WindowsManager$EL$ class.</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.AddPinnedWindow(MixModes.Synergy.VisualFramework.Windows.DockPane,System.Windows.Controls.Dock)">
      <summary>
Adds the dock pane.</summary>
      <param name="pane">
The pane.</param>
      <param name="dock">
The dock.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.AddAutoHideWindow(MixModes.Synergy.VisualFramework.Windows.DockPane,System.Windows.Controls.Dock)">
      <summary>
Adds the window in auto hide fashion</summary>
      <param name="pane">
The pane.</param>
      <param name="dock">
The dock.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.AddFloatingWindow(MixModes.Synergy.VisualFramework.Windows.DockPane)">
      <summary>
Adds the floating window.</summary>
      <param name="pane">
The pane.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.RemoveDockPane(MixModes.Synergy.VisualFramework.Windows.DockPane)">
      <summary>
Removes the dock pane from windows manager alltogether and unsubscribes from all events</summary>
      <param name="pane">
The pane.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.Clear">
      <summary>
Clears the windows manager</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.StartDockPaneStateChangeDetection">
      <summary>
Starts the dock pane state change detection</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.StopDockPaneStateChangeDetection">
      <summary>
Stops the dock pane state change detection</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.GetIsContentDock(System.Windows.DependencyObject)">
      <summary>
Gets the IsContentDock property value</summary>
      <param name="obj">
WindowsManager instance</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.SetIsContentDock(System.Windows.DependencyObject,System.Boolean)">
      <summary>
Sets the IsContentDock property value</summary>
      <param name="obj">
WindowsManager instance</param>
      <param name="value">
Property value</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.GetDockPaneIllustrationStyle(System.Windows.DependencyObject)">
      <summary>
Gets the dock pane illustration style</summary>
      <param name="obj">
The obj.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.SetDockPaneIllustrationStyle(System.Windows.DependencyObject,System.Windows.Style)">
      <summary>
Sets the dock pane illustration style</summary>
      <param name="obj">
The obj.</param>
      <param name="value">
The value.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.GetDockIllustrationContentStyle(System.Windows.DependencyObject)">
      <summary>
Gets the dock content illustration style</summary>
      <param name="obj">
The obj.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManager.SetDockIllustrationContentStyle(System.Windows.DependencyObject,System.Windows.Style)">
      <summary>
Sets the dock content illustration style.</summary>
      <param name="obj">
The obj.</param>
      <param name="value">
The value.</param>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.WindowsManager.ActiveWindowsManager">
      <summary>
Active windows manager</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.WindowsManager.DraggedPane">
      <summary>
Dragged pane</summary>
      <remarks>
Needs to be static since there can be only one dragged pane at any time and also since DraggedPanes can change ownership from one WindowsManager instance to another</remarks>
    </member>
    <member name="N:MixModes.Synergy.VisualFramework.Commands">
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Commands.CommandBase">
      <summary>
Base class for commands</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Commands.CommandBase.#ctor(System.Action{System.Object})">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000032$SL$$LE$CommandBase$EL$ class.</summary>
      <param name="execute">
The execute.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Commands.CommandBase.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000032$SL$$LE$CommandBase$EL$ class.</summary>
      <param name="execute">
The execute.</param>
      <param name="canExecute">
The can execute.</param>
    </member>
    <member name="E:MixModes.Synergy.VisualFramework.Commands.CommandBase.CanExecuteChanged">
      <summary>
Occurs when changes occur that affect whether or not the command should execute</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Commands.CommandBase.CanExecute(System.Object)">
      <summary>
Defines the method that determines whether the command can execute in its current state.</summary>
      <returns>
true if this command can be executed; otherwise, false.</returns>
      <param name="parameter">
Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Commands.CommandBase.Execute(System.Object)">
      <summary>
Defines the method to be called when the command is invoked.</summary>
      <param name="parameter">
Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Windows.XmlWindowsManagerDeserializer">
      <summary>
Xml window manager deserializer</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.XmlWindowsManagerDeserializer.#ctor(System.Action{MixModes.Synergy.VisualFramework.Windows.DockPane,System.String})">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000038$SL$$LE$XmlWindowsManagerDeserializer$EL$ class.</summary>
      <param name="dockPaneReader">
</param>
    </member>
    <member name="N:MixModes.Synergy.VisualFramework.Converters">
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Converters.EmptyPanelToVisibilityConverter">
      <summary>
Converts empty behavior of a panel to visibility</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Converters.EmptyPanelToVisibilityConverter.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_000000000000003B$SL$$LE$EmptyPanelToVisibilityConverter$EL$ class.</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Converters.EmptyPanelToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
Converts a value.</summary>
      <returns>
A converted value. If the method returns null, the valid null value is used.</returns>
      <param name="value">
The value produced by the binding source.</param>
      <param name="targetType">
The type of the binding target property.</param>
      <param name="parameter">
The converter parameter to use.</param>
      <param name="culture">
The culture to use in the converter.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Converters.EmptyPanelToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
Converts a value.</summary>
      <returns>
A converted value. If the method returns null, the valid null value is used.</returns>
      <param name="value">
The value that is produced by the binding target.</param>
      <param name="targetType">
The type to convert to.</param>
      <param name="parameter">
The converter parameter to use.</param>
      <param name="culture">
The culture to use in the converter.</param>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Converters.EmptyPanelToVisibilityConverter.EmptyVisibility">
      <summary>
Empty visibility mode</summary>
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Windows.DocumentContent">
      <summary>
Document content</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.DocumentContent.#ctor(MixModes.Synergy.VisualFramework.Windows.DockPane,System.Windows.Input.ICommand)">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000040$SL$$LE$DocumentContent$EL$ class.</summary>
      <param name="pane">
The pane.</param>
      <param name="closeCommand">
The close command.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.DocumentContent.DetachDockPane">
      <summary>
Detaches the dock pane.</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DocumentContent.CloseCommand">
      <summary>
Gets or sets the close command.</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DocumentContent.Header">
      <summary>
Gets or sets the header.</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DocumentContent.Content">
      <summary>
Gets or sets the content.</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DocumentContent.DockPane">
      <summary>
Gets or sets the dock pane.</summary>
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Windows.DockPane">
      <summary>
DockPanel class</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.DockPane.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000047$SL$$LE$DockPane$EL$ class.</summary>
    </member>
    <member name="E:MixModes.Synergy.VisualFramework.Windows.DockPane.Close">
      <summary>
Occurs when close button is clicked</summary>
    </member>
    <member name="E:MixModes.Synergy.VisualFramework.Windows.DockPane.TogglePin">
      <summary>
Occurs when dock pane's pin is toggled</summary>
    </member>
    <member name="E:MixModes.Synergy.VisualFramework.Windows.DockPane.HeaderDrag">
      <summary>
Occurs when header is dragged</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.DockPane.OnApplyTemplate">
      <summary>
When overridden in a derived class, is invoked whenever application code or internal processes call $MSDNLS$M:System.Windows.FrameworkElement.ApplyTemplate$MSDNLE$ApplyTemplate$MSDNEL$.</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DockPane.Icon">
      <summary>
Gets or sets the icon.</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DockPane.CondencedDockPanel">
      <summary>
Condenced dock panel</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DockPane.DockPaneState">
      <summary>
Gets or sets a value indicating dock pane state</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DockPane.CondencedDockPanelTemplate">
      <summary>
Condenced dock panel template</summary>
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Windows.DocumentContainer">
      <summary>
Encapsulates documents into tabbed and/or split views</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.DocumentContainer.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000051$SL$$LE$DocumentContainer$EL$ class.</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.DocumentContainer.Clear">
      <summary>
Clears the content panel</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.DocumentContainer.OnApplyTemplate">
      <summary>
When overridden in a derived class, is invoked whenever application code or internal processes call $MSDNLS$M:System.Windows.FrameworkElement.ApplyTemplate$MSDNLE$ApplyTemplate$MSDNEL$.</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.DocumentContainer.AddDockPane(MixModes.Synergy.VisualFramework.Windows.DockPane,MixModes.Synergy.VisualFramework.Windows.ContentDockPoint)">
      <summary>
Adds the dock pane to the document container via splitting and docks it to the specified dock point</summary>
      <param name="pane">
Pane to add</param>
      <param name="dockPoint">
The dock point for content</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.DocumentContainer.AddDocumentContainers(System.Collections.Generic.IEnumerable{MixModes.Synergy.VisualFramework.Windows.DocumentContainer},System.Boolean)">
      <summary>
Adds the document containers by splitting the current document container</summary>
      <param name="childContainers">
The child containers.</param>
      <param name="isHorizontal">
if set to <c>true</c> indicates horizontal orientation otherwise vertical orientation</param>
      <exception cref="ArgumentNullException">
childContainers is null</exception>
      <exception cref="InvalidOperationException">
Current document container is not empty or current state is not SplitHorizontally or SplitVertically childContainers is empty or childContainers has more than two containers or the containers overlap with each other</exception>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.DocumentContainer.AddDocument(MixModes.Synergy.VisualFramework.Windows.DockPane)">
      <summary>
Adds the dock panel as a document</summary>
      <param name="pane">
The pane</param>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DocumentContainer.State">
      <summary>
Document container state</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DocumentContainer.DocumentsTab">
      <summary>
Documents tab</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DocumentContainer.Documents">
      <summary>
Documents</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Windows.DocumentContainer.DockIllustrationPanel">
      <summary>
Dock illustration panel containing content docking points</summary>
    </member>
    <member name="N:MixModes.Synergy.VisualFramework.Extensions">
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Extensions.FrameworkElementExtensions">
      <summary>
FrameworkElement extension methods</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Extensions.FrameworkElementExtensions.ShowNotificationToolTip(System.Windows.FrameworkElement,System.Object)">
      <summary>
Shows the notification tool tip on a FrameworkElement at the bottom</summary>
      <param name="element">
FrameworkElement instance to display notification on</param>
      <param name="content">
Notification content</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Extensions.FrameworkElementExtensions.ShowNotificationToolTip(System.Windows.FrameworkElement,System.Object,System.Windows.Controls.Primitives.PlacementMode)">
      <summary>
Shows the notification tool tip on a FrameworkElement at specified PlacementMode value</summary>
      <param name="element">
FrameworkElement instance to display notification on</param>
      <param name="content">
Notification content</param>
      <param name="placementMode">
Placement mode.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Extensions.FrameworkElementExtensions.EnforceSize(System.Windows.FrameworkElement)">
      <summary>
This method ensures that the Widths and Heights are initialized. Sizing to content produces Width and Height values of Double.NaN. Because this Adorner explicitly resizes, the Width and Height need to be set first.  It also sets the maximum size of the adorned element.</summary>
      <param name="elementToResize">
Element to resize</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Extensions.FrameworkElementExtensions.ClearAdornerLayer(System.Windows.FrameworkElement)">
      <summary>
Clears the adorner layer for the element</summary>
      <param name="element">
The element.</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Extensions.FrameworkElementExtensions.GetLogicalParent``1(System.Windows.FrameworkElement)">
      <summary>
Gets the first logical parent of specified type or null if no parent of that type is found</summary>
      <returns>
First logical parent of specified type or null if no parent of that type is found</returns>
      <param name="element">
The element</param>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Extensions.FrameworkElementExtensions.GetVisualParent``1(System.Windows.FrameworkElement)">
      <summary>
Gets the first visual parent of specified type or null if no parent of that type is found</summary>
      <returns>
First visual parent of specified type or null if no parent of that type is found</returns>
      <param name="element">
The element</param>
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Windows.WindowsManagerDeserializer">
      <summary>
Deserializes a window manager</summary>
      <remarks>
Deserialization should be atomic operation and must not leave windows manager is an unstable state</remarks>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Windows.WindowsManagerDeserializer.Deserialize(System.IO.Stream,MixModes.Synergy.VisualFramework.Windows.WindowsManager)">
      <summary>
Deserializes the specified windows manager from the stream.</summary>
      <param name="stream">
The stream.</param>
      <param name="windowsManager">
The windows manager.</param>
      <exception cref="ArgumentNullException">
stream or windowsManager are null</exception>
      <exception cref="InvalidOperationException">
stream is not readable</exception>
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Behaviors.ContentDockBehavior">
      <summary>
Illustrates the docking behavior for Content within DocumentContainer</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Behaviors.ContentDockBehavior.DockPoint">
      <summary>
Dock point</summary>
    </member>
    <member name="N:MixModes.Synergy.VisualFramework.ViewModels">
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.ViewModels.ViewModelBase">
      <summary>
Base class for view models</summary>
    </member>
    <member name="E:MixModes.Synergy.VisualFramework.ViewModels.ViewModelBase.PropertyChanged">
      <summary>
Occurs when a property value changes</summary>
    </member>
    <member name="N:MixModes.Synergy.VisualFramework.Controls">
    </member>
    <member name="T:MixModes.Synergy.VisualFramework.Controls.NotificationToolTipContent">
      <summary>
Interaction logic for NotificationTooltipContent.xaml</summary>
    </member>
    <member name="M:MixModes.Synergy.VisualFramework.Controls.NotificationToolTipContent.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_000000000000006C$SL$$LE$NotificationToolTipContent$EL$ class.</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Controls.NotificationToolTipContent.Title">
      <summary>
Gets or sets the title.</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Controls.NotificationToolTipContent.Icon">
      <summary>
Gets or sets the icon.</summary>
    </member>
    <member name="P:MixModes.Synergy.VisualFramework.Controls.NotificationToolTipContent.Description">
      <summary>
Gets or sets the description.</summary>
    </member>
  </members>
</doc>
